[{"/home/aanand/Documents/Projects/Express/node_old/client/src/screens/Main.js":"1","/home/aanand/Documents/Projects/Express/node_old/client/src/screens/FileChoose.js":"2","/home/aanand/Documents/Projects/Express/node_old/client/src/reportWebVitals.js":"3"},{"size":7996,"mtime":1609512409341,"results":"4","hashOfConfig":"5"},{"size":2929,"mtime":1609512836428,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":1609326163111,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":18,"fixableErrorCount":0,"fixableWarningCount":0,"source":"10"},"5yxbzl",{"filePath":"11","messages":"12","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/aanand/Documents/Projects/Express/node_old/client/src/screens/Main.js",["15","16","17","18","19","20","21","22","23","24","25","26","27","28","29","30","31","32"],"import React, { Component, useState } from 'react'\n\nimport {\n    Button,\n    TextField,\n    Typography,\n    Table,\n    TableCell,\n    TableBody,\n    TableHead,\n    TableRow, \n} from '@material-ui/core'\n \nimport { \n    MuiPickersUtilsProvider,\n    KeyboardTimePicker,\n    KeyboardDatePicker,\n} from '@material-ui/pickers';\nimport moment from 'moment'\nimport { DateTimePicker } from 'react-widgets'\nimport DeleteIcon from '@material-ui/icons/Delete'; \n\nvar formatter = moment().format(\"YYYY-MM-DD:HH\")\n\nfunction Picker() {\n    const [value, onChange] = useState(new Date());\n   \n    return (\n      <div>\n        <DateTimePicker\n          onChange={onChange}\n          value={value}\n        />\n      </div>\n    );\n  }\n\nexport default class Main extends Component {\n\n    constructor(props) {\n        super(props)\n    \n        this.state = {\n             path:localStorage.getItem('path'),\n             data:[],\n             key:\"\",\n             value:\"\",\n             date:\"\",\n             time:\"\",\n             date_err:false,\n             time_err:false,\n             key_err:false,\n             value_err:false, \n        }\n\n        this.getData = this.getData.bind(this);\n    }\n\n    componentDidMount(){\n        this.getData()\n    }\n\n    checkDate(e){\n        this.setState({date:e.target.value}) \n    }\n\n    checkTime(e){\n        this.setState({time:e.target.value}) \n    }\n    \n\n    getData = () =>{\n        fetch('http://localhost:5000/api/get',{\n            method:\"POST\",\n            headers:{\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                path:this.state.path\n            })\n            })\n            .then((res)=>res.json())\n            .then((res)=>{\n                \n                var data = []\n                for(var i in res)\n                    data.push([i, res[i]]);\n                this.setState({\n                    data\n                })\n                console.log(\"Result\" , this.state.data)\n            }) \n    } \n\n    addData = () =>{\n\n        const {\n            key,\n            value,\n            date,\n            time,\n            path,\n            key_err,\n            value_err,\n            date_err,\n            time_err, \n        } = this.state; \n\n        if(key.length==0){\n            this.setState({key_err:true})\n        }\n        else{\n            this.setState({key_err:false})\n            if(value.length==0){\n                this.setState({value_err:true})\n            }\n            else{\n                this.setState({value_err:false})\n                if(date.length!=10 && date.length!=0){\n                    this.setState({date_err:true})\n                }\n                else{\n                    this.setState({date_err:false})\n                    if(time.length!=5 && time.length!=0){\n                        this.setState({time_err:true})\n                    }\n                    else{\n                        this.setState({time_err:false})\n                        var timestamp = 0;\n                        if(date.length!=0 && time.length!=0){\n                            let year = Number(date.slice(6,10))\n                            let month = Number(date.slice(3,5))\n                            let day = Number(date.slice(0,2))\n                            let hour = Number(time.slice(0,2))\n                            let min = Number(time.slice(3,5))\n                            let doc = new Date(year,month,day,hour,min);\n                            let cur = Date.now();\n                            timestamp = doc.getTime(); \n                            console.log(\"stamp:\",year,month,day,hour,min,timestamp,cur)\n                        }\n                        \n                        var data = JSON.stringify({\n                            path:path,\n                            key:key,\n                            value:value,\n                            timestamp:timestamp, \n                        })\n                        fetch('http://localhost:5000/api/add',{\n                            method:\"POST\",\n                            headers:{\n                                \"Accept\":\"application/json\",\n                                \"Content-Type\":\"application/json\"\n                            },\n                            body: data\n                            })\n                            .then((res)=>res.json())\n                            .then((res)=>{\n                                console.log(res)\n                                this.getData()\n                                this.setState({\n                                    key:\"\",\n                                    value:\"\",\n                                    date:\"\",\n                                    time:\"\"\n                                })\n                            })\n                    }\n                }\n            }\n        }\n    }\n\n    deleteData(key){\n        let url = 'http://localhost:5000/api/delete/'\n        fetch(url,{\n            method:\"POST\",\n            headers:{\n                \"Accept\":\"application/json\",\n                \"Content-Type\":\"application/json\"\n            },\n            body:JSON.stringify({\n                key:key,\n                path:this.state.path\n                })\n            })\n            .then((res)=>{ \n                return res.json()\n            })\n            .then((res)=>{\n                console.log(\"Del Res\",res)\n                this.getData()\n            })\n\n    }\n    render() {\n        \n        return (\n            <div style={{display:\"flex\",alignItems:\"center\",flexDirection:\"column\"}} > \n                <div style={{display:\"flex\",flexDirection:\"row\",alignItems:\"center\"}} >\n                    <div>\n                        <TextField value={this.state.key} error={this.state.key_err} helperText=\"format: String\" style={{margin:10}} label=\"Key\" variant=\"outlined\" onChange={(e)=>this.setState({key:e.target.value})} />\n                        <br/>\n                        <TextField value={this.state.value} error={this.state.value_err} helperText=\"format: Any datatype\"  style={{margin:10}} label=\"Value\" variant=\"outlined\" onChange={(e)=>this.setState({value:e.target.value})} />\n                    </div>\n                    <div > \n                        <TextField value={this.state.date} error={this.state.date_err} helperText=\"format: DD-MM-YYYY\" style={{margin:10}} label=\"Date\" variant=\"outlined\" onChange={(e)=>this.checkDate(e)} />\n                        <br/>\n                        <TextField value={this.state.time} error={this.state.time_err} helperText=\"format: HH:MM\"  style={{margin:10}} label=\"Time\" variant=\"outlined\" onChange={(e)=>this.checkTime(e)} />\n                    </div>\n                </div>\n                <Button variant=\"contained\" color=\"primary\"  style={{marginTop:30}} onClick={this.addData} >Add</Button>\n                <div>\n                    <Table aria-label=\"simple table\">\n                        <TableHead>\n                        <TableRow>\n                            <TableCell>Key</TableCell>\n                            <TableCell align=\"right\">Value</TableCell> \n                            <TableCell align=\"right\">Action</TableCell> \n                        </TableRow>\n                        </TableHead>\n                        <TableBody>\n                        {this.state.data.map((row,ind) => (\n                            <TableRow key={ind} >\n                                <TableCell component=\"th\" scope=\"row\">{row[0]}</TableCell>\n                                <TableCell align=\"right\">{row[1]['data']}</TableCell> \n                                <TableCell style={{cursor:\"pointer\"}} onClick={()=>this.deleteData(row[0])} ><DeleteIcon/></TableCell>\n                        </TableRow>\n                        ))}\n                         \n                        </TableBody>\n                    </Table>\n                </div>\n            </div>\n        )\n    }\n}\n","/home/aanand/Documents/Projects/Express/node_old/client/src/screens/FileChoose.js",["33","34","35"],"/home/aanand/Documents/Projects/Express/node_old/client/src/reportWebVitals.js",[],{"ruleId":"36","severity":1,"message":"37","line":6,"column":5,"nodeType":"38","messageId":"39","endLine":6,"endColumn":15},{"ruleId":"36","severity":1,"message":"40","line":15,"column":5,"nodeType":"38","messageId":"39","endLine":15,"endColumn":28},{"ruleId":"36","severity":1,"message":"41","line":16,"column":5,"nodeType":"38","messageId":"39","endLine":16,"endColumn":23},{"ruleId":"36","severity":1,"message":"42","line":17,"column":5,"nodeType":"38","messageId":"39","endLine":17,"endColumn":23},{"ruleId":"36","severity":1,"message":"43","line":23,"column":5,"nodeType":"38","messageId":"39","endLine":23,"endColumn":14},{"ruleId":"36","severity":1,"message":"44","line":25,"column":10,"nodeType":"38","messageId":"39","endLine":25,"endColumn":16},{"ruleId":"36","severity":1,"message":"45","line":104,"column":13,"nodeType":"38","messageId":"39","endLine":104,"endColumn":20},{"ruleId":"36","severity":1,"message":"46","line":105,"column":13,"nodeType":"38","messageId":"39","endLine":105,"endColumn":22},{"ruleId":"36","severity":1,"message":"47","line":106,"column":13,"nodeType":"38","messageId":"39","endLine":106,"endColumn":21},{"ruleId":"36","severity":1,"message":"48","line":107,"column":13,"nodeType":"38","messageId":"39","endLine":107,"endColumn":21},{"ruleId":"49","severity":1,"message":"50","line":110,"column":22,"nodeType":"51","messageId":"52","endLine":110,"endColumn":24},{"ruleId":"49","severity":1,"message":"50","line":115,"column":28,"nodeType":"51","messageId":"52","endLine":115,"endColumn":30},{"ruleId":"49","severity":1,"message":"53","line":120,"column":31,"nodeType":"51","messageId":"52","endLine":120,"endColumn":33},{"ruleId":"49","severity":1,"message":"53","line":120,"column":50,"nodeType":"51","messageId":"52","endLine":120,"endColumn":52},{"ruleId":"49","severity":1,"message":"53","line":125,"column":35,"nodeType":"51","messageId":"52","endLine":125,"endColumn":37},{"ruleId":"49","severity":1,"message":"53","line":125,"column":53,"nodeType":"51","messageId":"52","endLine":125,"endColumn":55},{"ruleId":"49","severity":1,"message":"53","line":131,"column":39,"nodeType":"51","messageId":"52","endLine":131,"endColumn":41},{"ruleId":"49","severity":1,"message":"53","line":131,"column":57,"nodeType":"51","messageId":"52","endLine":131,"endColumn":59},{"ruleId":"49","severity":1,"message":"50","line":27,"column":26,"nodeType":"51","messageId":"52","endLine":27,"endColumn":28},{"ruleId":"49","severity":1,"message":"50","line":27,"column":53,"nodeType":"51","messageId":"52","endLine":27,"endColumn":55},{"ruleId":"49","severity":1,"message":"53","line":61,"column":26,"nodeType":"51","messageId":"52","endLine":61,"endColumn":28},"no-unused-vars","'Typography' is defined but never used.","Identifier","unusedVar","'MuiPickersUtilsProvider' is defined but never used.","'KeyboardTimePicker' is defined but never used.","'KeyboardDatePicker' is defined but never used.","'formatter' is assigned a value but never used.","'Picker' is defined but never used.","'key_err' is assigned a value but never used.","'value_err' is assigned a value but never used.","'date_err' is assigned a value but never used.","'time_err' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","Expected '!==' and instead saw '!='."]